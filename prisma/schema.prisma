generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id              Int               @id @default(autoincrement())
  type_user       Int               @default(5) // Loại tài khoản: 1 - Admin system | 2 - Manager | 3 - Employee | 4 - Technician | 5 - Client
  email           String            @unique
  mobile          String?           @unique
  password        String
  is_verified     Boolean           @default(false)
  status          Boolean           @default(true)
  full_name       String?
  social_nextwork Json?
  user_activities user_activities[]
  model_has_roles model_has_roles[]

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  seller_orders orders[] @relation("sellerRelation") // Đổi tên quan hệ này cho người bán
  buyer_orders  orders[] @relation("buyerRelation") // Đổi tên quan hệ này cho người mua
}

model roles {
  id               Int                    @id @default(autoincrement())
  name             String                 @unique
  guard_name       String?                @unique // Ví dụ: `web`, `api` để phân biệt các guard khác nhau
  description      String?                @db.Text
  role_permissions role_has_permissions[]

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  model_has_roles model_has_roles[]
}

model permissions {
  id                Int                    @id @default(autoincrement())
  name              String                 @unique
  icon              String?
  guard_name        String? // Ví dụ: `web`, `api`
  parent_id         Int?
  path              String? // Đường dẫn liên quan đến quyền (nếu là route)
  level             Int? // Mức độ của quyền
  route_name        String? // Tên route nếu quyền liên quan đến route
  title_name        String? // Tên hiển thị của quyền
  title_description String? // Mô tả của quyền
  status            Int? // Trạng thái của quyền: 1 (Show) hoặc 0 (Hide)
  role_permissions  role_has_permissions[] // Quan hệ nhiều-nhiều với roles qua bảng trung gian

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

model role_has_permissions {
  role_id       Int
  permission_id Int
  role          roles       @relation(fields: [role_id], references: [id])
  permission    permissions @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
}

model model_has_roles {
  user_id Int
  role_id Int
  user    users @relation(fields: [user_id], references: [id])
  role    roles @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
}

model user_activities {
  id          Int     @id @default(autoincrement())
  user_id     Int
  action      String  @db.VarChar(100)
  description String? @db.Text
  ip_address  String? @db.VarChar(45)
  user_agent  String?
  session_id  String?
  user        users   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  created_at DateTime? @default(now())

  @@index([user_id])
  @@index([created_at])
}

model shop_accounts {
  id         Int       @id @default(autoincrement())
  platform   platforms @relation(fields: [platformId], references: [id])
  platformId Int
  username   String    @unique
  password   String
  email      String
  price      Float
  isSold     Boolean   @default(false)
  farm       String? // Farm (khu vực vận hành của nền tảng)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model platforms {
  id               Int     @id @default(autoincrement())
  name             String  @unique // Tên nền tảng (YouTube, Netflix,...)
  source           String? // Nguồn gốc hoặc nguồn dữ liệu của nền tảng (nếu có)
  password         String? // Mật khẩu của nền tảng (nếu có)
  mail_recovery    String? // Email khôi phục của nền tảng (nếu có)
  country          String? // Quốc gia của nền tảng (nếu có)
  origin_price     Decimal? @db.Decimal(16, 2) // Giá gốc của nền tảng
  price            Decimal @db.Decimal(16, 2) // Giá bán hiện tại
  percent_discount Float? // % Giảm giá (dưới dạng số thập phân)
  final_price      Decimal? @db.Decimal(16, 2) // Giá bán cuối cùng

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  accounts shop_accounts[]
  orders   orders[]
}

model orders {
  id               Int       @id @default(autoincrement())
  order_code       String    @unique // Mã đơn hàng, đảm bảo tính duy nhất
  seller           users     @relation("sellerRelation", fields: [seller_id], references: [id])
  seller_id        Int
  buyer            users     @relation("buyerRelation", fields: [buyer_id], references: [id])
  buyer_id         Int
  platform         platforms @relation(fields: [platformId], references: [id])
  platformId       Int
  price            Decimal   @db.Decimal(16, 2) // Giá bán
  description      String?   @db.Text // Mô tả giao dịch
  account_type     String? // Loại tài khoản
  duration         Int? // Thời hạn mua
  duration_type    Int? // Loại thời hạn mua theo năm (1), tháng (2) hoặc ngày (3)
  expiration_date  DateTime? // Ngày hết hạn
  payment_status   String? // Trạng thái thanh toán (VD: Paid, Unpaid, Pending)
  payment_date     DateTime? // Ngày thanh toán
  payment_due_date DateTime? // Ngày hẹn thanh toán
  notes            String?   @db.Text // Ghi chú
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @updatedAt
}
